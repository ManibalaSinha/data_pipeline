networks:
  my_network:
    driver: bridge

services:
  db:
    image: postgres:15
    networks:
      - my_network
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: data_pipeline-redis
    networks:
      - my_network
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .        # root folder
      dockerfile: api/Dockerfile
    networks:
      - my_network
    command: sh -c "until pg_isready -h db -p 5432; do sleep 1; done; uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:password@db:5432/db
      REDIS_URL: redis://redis:6379/0
  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    networks:
      - my_network
    command: celery -A pipeline.tasks worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:password@db:5432/db
      REDIS_URL: redis://redis:6379/0
    working_dir: /app
    user: "1000:1000"

volumes:
  postgres_data:
